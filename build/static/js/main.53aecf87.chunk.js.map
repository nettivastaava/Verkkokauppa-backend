{"version":3,"sources":["queries.js","components/Product.js","components/Products.js","components/LoginForm.js","components/RegistrationForm.js","components/ShoppingCart.js","components/Notification.js","components/Menu.js","logos/pw_logo.png","App.js","index.js"],"names":["ALL_PRODUCTS","gql","LOGIN","ALL_CATEGORIES","ME","CREATE_USER","DECREASE_QUANTITY","ADD_COMMENT","ALL_COMMENTS","ADD_TO_CART","REMOVE_FROM_CART","CHECKOUT","Product","shownProduct","addToCart","setError","useState","content","setContent","comments","setComments","userData","useQuery","useLazyQuery","user","setUser","useMutation","refetchQueries","query","onError","error","createReview","useEffect","localStorage","getItem","document","getElementById","buyButton","quantity","disabled","data","me","id","loading","name","price","description","button","Button","onClick","postReview","event","a","preventDefault","product","variables","Table","striped","map","c","Form","onSubmit","value","onChange","target","className","cols","rows","type","Products","myCart","setMyCart","categoriesResult","getProducts","result","setCategory","categories","setCategories","products","setProducts","allCategories","allProducts","match","useRouteMatch","find","p","params","showCategory","category","styles","buttonStyle","marginTop","marginBottom","marginRight","marginLeft","path","style","href","LoginForm","setToken","setNotification","username","setUsername","password","setPassword","history","useHistory","graphQLErrors","message","setTimeout","login","token","setItem","push","window","location","reload","submit","Group","Label","Control","RegistrationForm","passwordConf","setPasswordConf","createUser","ShoppingCart","shoppingCart","setShoppingCart","removeFromCart","checkout","cart","total","item","amount","toFixed","checkoutFunc","i","length","productName","productToBeRemoved","removeProductFromCart","Notification","console","log","Menu","logout","padding","paddingRight","App","setErrorMessage","notification","notify","client","useApolloClient","title","Image","width","height","src","image","clear","resetStore","productToBeAdded","authLink","setContext","_","headers","authorization","httpLink","HttpLink","uri","ApolloClient","cache","InMemoryCache","link","concat","ReactDOM","render"],"mappings":"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","file":"static/js/main.53aecf87.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\n\nexport const ALL_PRODUCTS = gql`\n  query allProductsByCategory($category: String){\n    allProducts(category: $category) {\n      name\n      price\n      quantity\n      id\n      categories\n      description\n      comments {\n        user\n        product\n        content\n      }\n      units_sold\n    }\n  }\n  `\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`\n\nexport const ALL_CATEGORIES = gql`\nquery {\n  allCategories\n}\n`\nexport const ME = gql`\n  query {\n    me {\n      username\n      id\n      cart {\n        productName\n        amount\n        price\n      }\n    }\n  }\n  `\n\nexport const CREATE_USER = gql`\n  mutation createUser($username: String!, $password: String!, $passwordConf: String!) {\n    createUser(username: $username, password: $password, passwordConf: $passwordConf) {\n      username\n    }\n  }\n`\n\nexport const DECREASE_QUANTITY = gql`\n  mutation decreaseQuantity($name: String!, $quantity: Int!) {\n    decreaseQuantity(name: $name, quantity: $quantity) {\n      name\n      quantity\n    }\n  }\n`\n\nexport const FIND_PRODUCT = gql`\n  query findProduct($name: String!) {\n    findProduct(name: $name) {\n      name\n      price\n      quantity\n    }\n  }\n`\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($user: String!, $product: String!, $content: String!) {\n    addComment(user: $user, product: $product, content: $content) {\n      user\n      product\n      content\n    }\n  }\n`\n\nexport const ALL_COMMENTS = gql`\n  query allCommentsByProduct($product: String){\n    allComments(product: $product) {\n      user\n      product\n      content\n    }\n  }\n`\n\nexport const ADD_TO_CART = gql`\n  mutation addToCart($productName: String!, $price: Float!) {\n    addToCart(productName: $productName, price: $price) {\n      username\n      cart {\n        productName\n        price\n        amount\n      }\n    }\n  }\n`\n\nexport const REMOVE_FROM_CART = gql`\n  mutation removeFromCart($productName: String!) {\n    removeFromCart(productName: $productName) {\n      username\n      cart {\n        productName\n        price\n        amount\n      }\n    }\n  }\n`\n\nexport const TOTAL_PRICE = gql`\n  query {\n    totalPrice\n  }\n`\n\nexport const CHECKOUT = gql`\n  mutation {\n    checkout {\n      username\n      cart {\n        productName\n        price\n        amount\n      }\n    }\n  }\n`","import React, { useState, useEffect } from 'react'\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/client'\nimport Comments from './Comments'\nimport { ME, ALL_COMMENTS, ALL_PRODUCTS, ADD_COMMENT } from '../queries'\nimport { checkDocument } from '@apollo/client/utilities'\nimport { useRouteMatch } from 'react-router'\nimport { Table, Form, Button } from 'react-bootstrap'\n\nconst Product = ({ shownProduct, addToCart, setError }) => {\n  const [content, setContent] = useState('')\n  const [comments, setComments] = useState([])\n  const userData = useQuery(ME)\n  const [getComments, commentsResult] = useLazyQuery(ALL_COMMENTS)\n  const [user, setUser] = useState(null)\n\n  const [ createReview, result ] = useMutation(ADD_COMMENT, {  \n    refetchQueries: [ { query: ALL_PRODUCTS } ],\n    onError: (error) => {\n      setError(error)\n    },\n  })\n\n  useEffect(() => {\n    if (!shownProduct || !localStorage.getItem('shop-user-token') || !document.getElementById('buy-button')) {\n      return\n    }\n\n    setComments(shownProduct.comments) \n\n    const buyButton =  document.getElementById('buy-button')\n\n    if (shownProduct.quantity < 1) {\n      buyButton.disabled = true\n    } else {\n      buyButton.disabled = false\n    }\n    \n  })\n\n  useEffect(() => {    \n    if (userData.data && userData.data.me) {    \n      setUser(userData.data.me.id)    \n    }  \n  }, [userData])\n\n  if (userData.loading) {\n    return (\n      <div>loading...</div>\n    )\n  }\n\n  if (!shownProduct) {\n    return null\n  }\n\n  if (!localStorage.getItem('shop-user-token')) {\n    return (\n      <div>\n        <h2>{shownProduct.name}</h2>\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th>\n                price\n              </th>\n              <th>\n                description\n              </th>\n              <th>\n                quantity\n              </th>\n            </tr>\n            <tr>\n              <td>{shownProduct.name}</td>\n              <td>{shownProduct.price}$</td>\n              <td>{shownProduct.description}</td>\n              <td>{shownProduct.quantity}</td>\n            </tr>\n          </tbody>\n        </table>\n        Log in to see the reviews for this product\n      </div>\n    )\n  }\n  const button = <Button id='buy-button' onClick={() => addToCart(shownProduct)}>add to cart</Button>\n\n  const postReview = async (event) => {\n    \n    event.preventDefault()\n    const product = shownProduct.id\n    createReview({ variables: { user, product, content } })\n    setContent('')\n  }\n\n  return (\n    <div>\n      <h2>{shownProduct.name}</h2>\n      <Table striped>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              price\n            </th>\n            <th>\n              description\n            </th>\n            <th>\n              quantity\n            </th>\n            <th></th>\n          </tr>\n          <tr>\n            <td>{shownProduct.name}</td>\n            <td>{shownProduct.price}$</td>\n            <td>{shownProduct.description}</td>\n            <td>{shownProduct.quantity}</td>\n            <td>{button}</td>\n          </tr>\n        </tbody>\n      </Table>\n      {comments.map(c =>\n        <div key={c.id}>\n          <div>{c.content}</div>\n        </div>\n      )}\n      <Form onSubmit={postReview}>\n        <textarea value={content} onChange={({ target }) => setContent(target.value)} className=\"text\" cols=\"50\" rows =\"5\"></textarea>\n        <div>\n          <Button type='submit'>Review this product!</Button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default Product","import React, { useState, useEffect } from 'react'\nimport { useQuery, useLazyQuery } from '@apollo/client'\nimport { ALL_PRODUCTS, ALL_CATEGORIES, ME } from '../queries'\nimport Product from './Product'\nimport { Switch, Route, useRouteMatch } from 'react-router'\nimport { Table, Button } from 'react-bootstrap'\n\nconst Products = ({ myCart, setMyCart, addToCart, setError }) => {\n  const categoriesResult = useQuery(ALL_CATEGORIES)\n  const [getProducts, result] = useLazyQuery(ALL_PRODUCTS)\n  const [category, setCategory] = useState('')\n  const [categories, setCategories] = useState([])\n  const [products, setProducts] = useState([])\n  \n  useEffect(() => {\n    if (categoriesResult.data) {\n      setCategories(categoriesResult.data.allCategories)\n      getProducts()\n    }\n  }, [categoriesResult, getProducts])\n\n  useEffect(() => {    \n    if (result.data) {      \n      setProducts(result.data.allProducts)    \n    }  \n  }, [result])\n\n  const match = useRouteMatch('/products/:id')   \n  const product = match    \n    ? products.find(p => p.id === match.params.id)    \n    : null\n\n  if (categoriesResult.loading || result.loading) {\n    return <div>loading...</div>\n  }\n\n  const showCategory = (category) => {    \n    getProducts({ variables: { category: category } })  \n    \n    if (!category) {\n      setCategory('')\n    } else {\n      setCategory(category)\n    }\n  }\n\n  const styles = {\n    buttonStyle: {\n        marginTop: \"3px\",\n        marginBottom: \"3px\",\n        marginRight: \"3px\",\n        marginLeft: \"3px\"\n    }\n}\n  \n  return (\n    <div>\n      <Switch>\n        <Route path= \"/products/:id\">\n          <Product\n            shownProduct={product}\n            myCart={myCart}\n            setMyCart={setMyCart}\n            addToCart={addToCart}\n            setError={setError}\n          />\n        </Route>\n      </Switch>\n      <h2>Search products</h2>\n      \n      <div>\n        {categories.map(c => \n          <Button style={styles.buttonStyle} onClick={() => showCategory(c)}>{c}</Button>\n        )}\n        <Button style={styles.buttonStyle} onClick={() => showCategory('')}>trending</Button>\n      </div>\n      <Table striped>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              price\n            </th>\n            <th>\n              quantity\n            </th>\n          </tr>\n          {products.map(p =>\n            <tr key={p.name}>\n              <td><a href={`/products/${p.id}`} >{p.name}</a></td>\n              <td>{p.price}$</td>\n              <td>{p.quantity}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Products","import React, { useState, useEffect } from 'react'\nimport { useMutation, useQuery, useLazyQuery, from } from '@apollo/client'\nimport { LOGIN, ME } from '../queries'\nimport {\n  useHistory\n} from \"react-router-dom\"\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({ setToken, setNotification }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const [ login, result ] = useMutation(LOGIN, {\n    refetchQueries: [ { query: ME } ],  \n    onError: (error) => {\n      setNotification(error.graphQLErrors[0].message)\n      setTimeout(() => {\n        setNotification('')\n      }, 10000)\n    },\n  })\n\n  useEffect(() => { \n    if ( result.data ) {\n      const token = result.data.login.value\n      setToken(token)\n      localStorage.setItem('shop-user-token', token)\n      localStorage.setItem('username', username)\n      history.push('/')\n      window.location.reload()\n    }  \n  }, [result.data]) \n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    login({ variables: { username, password } })\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <Form onSubmit={submit}>\n        <Form.Group>\n          <Form.Label>username:</Form.Label>\n          <Form.Control\n            type='text'\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control           \n            type='password'\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button type='submit'>login</Button>\n        </Form.Group>\n      </Form>\n      <p>New user? Register <a href='/register'>here</a></p>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useState, useEffect } from 'react'\nimport { from, useMutation } from '@apollo/client'\nimport { CREATE_USER } from '../queries'\nimport {\n  useHistory\n} from \"react-router-dom\"\nimport { Form, Button } from 'react-bootstrap'\n\nconst RegistrationForm = ({ setNotification }) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordConf, setPasswordConf] = useState('')\n    const history = useHistory()\n\n    const [ createUser, result ] = useMutation(CREATE_USER, {  \n        onError: (error) => {\n          setNotification(error.graphQLErrors[0].message)\n          setTimeout(() => {\n            setNotification('')\n          }, 10000)\n        },\n    })\n\n    useEffect(() => { \n      if ( result.data ) {\n        setUsername('')\n        setPassword('')\n        setPasswordConf('')\n\n        history.push('/login')\n      }  \n    }, [result.data]) \n\n    const submit = async (event) => {\n        event.preventDefault()\n    \n        createUser({ variables: { username, password, passwordConf } })\n    }\n\n    return (\n      <div>\n        <h2>Create a new account</h2>\n        <Form onSubmit={submit}>\n          <Form.Group>\n            <Form.Label>username:</Form.Label>\n            <Form.Control\n              type='text'\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n            />\n            <Form.Label>password:</Form.Label>\n            <Form.Control\n              type='password'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n            <Form.Label>password confirmation:</Form.Label>\n            <Form.Control\n              type='password'\n              value={passwordConf}\n              onChange={({ target }) => setPasswordConf(target.value)}\n            />\n          <Button type='submit'>register</Button>\n          </Form.Group>\n        </Form>\n      </div>\n    )   \n}\n\nexport default RegistrationForm","import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { REMOVE_FROM_CART, CHECKOUT, ME } from '../queries'\nimport { Form, Button, Table } from 'react-bootstrap'\n\nconst ShoppingCart = ({ user, setNotification, setError }) => {\n  const [shoppingCart, setShoppingCart] = useState([])\n  const [ removeFromCart, removeResult ] = useMutation(REMOVE_FROM_CART, {\n    refetchQueries: [ { query: ME } ],\n    onError: (error) => {\n      setError(error)\n    },\n  })\n  const [ checkout, checkoutResult ] = useMutation(CHECKOUT, {\n    refetchQueries: [ { query: ME } ],\n    onError: (error) => {\n      setError(error)\n    },\n  })\n\n  useEffect(() => {\n    setShoppingCart(user.cart)\n  })\n\n  if (shoppingCart < 1) {\n    return (\n      <div>\n        <h2>Your shopping cart</h2>\n        Your shopping cart is currently empty.\n      </div>\n    )\n  }\n\n  var total = 0\n  shoppingCart.map(item => total += item.price * item.amount)\n  total = total.toFixed(2)\n\n  const removeProductFromCart = (productToBeRemoved) => {\n    const productName = productToBeRemoved.productName\n    removeFromCart({ variables: { productName }})\n    setNotification(`Removed ${productName} from cart`)\n      setTimeout(() => {\n        setNotification('')\n      }, 5000) \n\n    total =-productToBeRemoved.price\n  }\n\n  const checkoutFunc = async () => {\n    for (var i = 0; i < shoppingCart.length; i++) {\n    checkout()\n    setNotification(`Your purchase was successful`)\n      setTimeout(() => {\n        setNotification('')\n      }, 5000)\n    }\n  }\n  \n  return(\n    <div>\n      <h2>Your shopping cart</h2>\n      <Table striped>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              price per unit\n            </th>\n            <th>\n              amount\n            </th>\n            <th></th>\n          </tr>\n          {shoppingCart.map(p =>\n            <tr key={p.product}>\n              <td>{p.productName}</td>\n              <td>{p.price}$</td>\n              <td>{p.amount}</td>\n              <td><button onClick={() => removeProductFromCart(p)}>remove</button></td>\n            </tr>\n          )}\n          <tr>\n            <th>grand total:</th>\n            <th>{total}$</th>\n          </tr>\n        </tbody>\n      </Table>\n      <button onClick={() => checkoutFunc()}>checkout</button>\n    </div>\n  )\n}\n\n\nexport default ShoppingCart","import React from 'react'\n\nconst Notification = ({message}) => {\n  console.log(message)\n\n  if (message === '') {\n    return null\n  } else if (message.match('^Added') || message.match('^Your purchase was successful')) {\n    return <div className='addProd'>{message}</div>\n  } else if (message.match('^Removed') || message.match('^Make') || message.match('^Invalid')) {\n      return <div className='removeProd'>{message}</div>\n  } else {\n      return <div className='removeProd'>{message}</div>\n  }\n}\n\nexport default Notification","import React from 'react'\n\nconst Menu = ({ logout }) => {\n  const padding = {\n    paddingRight: 5\n  }\n  \n  if (!localStorage.getItem('shop-user-token')) {\n    return(\n      <div>\n        <a href='/products' style={padding}>products</a>\n        <a href='/login' style={padding}>login</a>\n      </div>\n    )\n  }\n  \n  return(\n    <div>\n      <a href='/products' style={padding}>products</a>\n      <a href='/shopping-cart' style={padding}>shopping cart</a>\n      <a href='/' onClick={logout}>logout</a>\n    </div>\n  )\n}\n\nexport default Menu","export default __webpack_public_path__ + \"static/media/pw_logo.ae371c77.png\";","import React, { useState, useEffect } from 'react'\nimport { useQuery, useApolloClient, useMutation, useLazyQuery } from '@apollo/client'\nimport Products from './components/Products'\nimport LoginForm from './components/LoginForm'\nimport RegistrationForm from './components/RegistrationForm'\nimport ShoppingCart from './components/ShoppingCart'\nimport Notification from './components/Notification'\nimport Menu from './components/Menu'\nimport image from './logos/pw_logo.png'\nimport { Image } from 'react-bootstrap'\nimport { ME, DECREASE_QUANTITY, ALL_PRODUCTS, ADD_TO_CART } from './queries'\nimport {\n  Switch, Route, Link, useRouteMatch\n} from \"react-router-dom\"\n\nconst App = () =>  {\n  const [errorMessage, setErrorMessage] = useState('')\n  const [notification, setNotification] = useState('')\n  const userData = useQuery(ME)\n  const [ decreaseQuantity, result ] = useMutation(DECREASE_QUANTITY, {\n    refetchQueries: [ { query: ALL_PRODUCTS } ],\n    onError: (error) => {\n      notify(error)\n    },\n  })\n  const [ addToCart, addResult ] = useMutation(ADD_TO_CART, {\n    refetchQueries: [ { query: ALL_PRODUCTS } ],\n    onError: (error) => {\n      notify(error)\n    },\n  })\n  const [token, setToken] = useState(null)\n  const client = useApolloClient()\n  const [myCart, setMyCart] = useState([])\n\n  useEffect(() => {\n    document.title = 'Pennywise Web Store'\n  }, [])\n\n  const notify = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage('')\n    }, 10000)\n  }\n\n  if (userData.loading) {\n    return(\n      <div>loading...</div>\n    )\n  }\n\n  const addProductToCart =  (productToBeAdded) => {\n    const productName = productToBeAdded.name\n    const price = productToBeAdded.price\n    console.log('prod ', productName)\n    addToCart({ variables: { productName, price } })\n    setNotification(`Added ${productName} to cart`)\n      setTimeout(() => {\n        setNotification('')\n      }, 5000)\n  }\n\n  const logout = () => {\n    setToken(null)\n    localStorage.clear()\n    client.resetStore()\n  }\n\n  if (!localStorage.getItem('shop-user-token')) {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <Image width=\"140\" height=\"140\" src={image} />\n          <h1>Pennywise Web Store</h1>\n        </div>\n        <Notification message={notification} />\n        <Menu />\n        <Switch>\n          <Route path= \"/login\">\n            <LoginForm\n              setToken={setToken}\n              setNotification={setNotification}\n            />      \n          </Route>\n          <Route path= \"/register\">\n            <RegistrationForm\n              setNotification={setNotification}\n            />\n          </Route>\n          <Route path= \"/products\">\n            <Products \n            />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n\n  return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <Image width=\"140\" height=\"140\" src={image} />\n          <h1>Pennywise Web Store</h1>\n        </div>\n        <Notification message={notification} />\n        <Menu logout={logout}/>\n        <Switch>\n          <Route path= \"/shopping-cart\">\n            <ShoppingCart\n              user = {userData.data.me}\n              setNotification={setNotification}\n              setError={notify}\n            />\n          </Route>\n          <Route path= \"/products\">\n            <Products \n              myCart={myCart}\n              setMyCart={setMyCart}\n              addToCart={addProductToCart}\n              setError={notify}\n            />\n          </Route>\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { setContext } from 'apollo-link-context'\nimport './index.css'\n\nimport { \n    ApolloClient, ApolloProvider, HttpLink, InMemoryCache\n} from '@apollo/client' \nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\"\n\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('shop-user-token')\n  return {    \n    headers: {      \n      ...headers,      \n      authorization: token ? `bearer ${token}` : null,    \n    }  \n  }})\n\nconst httpLink = new HttpLink({ uri: '/graphql' })\n  \nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}